About:
  Basic Search Page: Here, users are presented with essential information about Pokémon, including their name, base XP, height, weight, 
  abilities, type, and stats. All of this information is interactive, and when hovered over, it highlights or lifts off the page, creating a 
  dynamic experience for the user.

  Detailed Report Page: Similar to the search page, this page provides more in-depth information about Pokémon. Additionally, it features an 
  added section on moves. Users can explore moves in a dropdown menu, and when hovering over a move, it lights up in red, indicating which move 
  they are examining.

  More Information:
    I used BootStrap to help my website be dynamic and responsive. Using its form validation and using Bootstrap 4, Font awesome 4, Font Awesome 
    5 Free & Pro snippets and Bootstrap 5 Quick Snippets. elements within my web page. while using CSS to put on a more personal touch the pages.

Features:
  -Hover effects
  -Dropdowns
  -Slideshow for images
  -Moving navigation bar icon
  -Form validation

Extensions:
  Bootstrap 4, Font awesome 4, Font Awesome 5 Free & Pro snippets
  Bootstrap 5 Quick Snippets

Project Questions:
  Homepage:
  Design a visually appealing landing page with Bootstrap components and custom CSS styles.
  Implement responsive design principles to ensure compatibility across various devices and screen sizes.

  Pokémon Search Page:
  Create a search page where users can enter a Pokémon's name or ID to retrieve relevant information.
  Utilize JavaScript to fetch data from the PokeAPI and dynamically update the webpage content based on user input.

  Pokémon Details Page:
  Develop a details page that displays comprehensive information about a specific Pokémon, including its abilities, types, stats, and image.
  Apply CSS styling to enhance the presentation of Pokémon details and ensure readability.

  Pokémon Types Page  (Bonus):
  Create a page that categorizes Pokémon based on their types (e.g., grass, fire, water) and allows users to explore Pokémon within each type category.
  Apply CSS styles to differentiate Pokémon types and enhance visual clarity.

  Pokémon Abilities Page  (Bonus):
  Develop a page that lists different Pokémon abilities and provides detailed descriptions for each ability.
  Utilize JavaScript to fetch ability data from the PokeAPI and present it in a user-friendly format.

  Pokémon Moves Page  (Bonus):
  Design a page that showcases various Pokémon moves, including their names, types, power, accuracy, and effects.
  Apply CSS styles to organize move data and create an intuitive user interface for browsing moves.

  Pokémon Generation Page  (Bonus):
  Implement a page that displays Pokémon from specific generations (e.g., Generation I, Generation II) and allows users to explore Pokémon within each generation.
  Utilize JavaScript to filter and display Pokémon based on generation criteria.

  Pokémon Team Builder (Bonus):
  Create a team builder feature that allows users to assemble and customize their Pokémon teams.
  Implement drag-and-drop functionality or interactive forms for adding and removing Pokémon from the team.

  Pokémon Battle Simulator (Bonus):
  Develop a Pokémon battle simulator that simulates Pokémon battles based on user-selected teams and moves.
  Utilize JavaScript to simulate battle mechanics, calculate damage, and determine battle outcomes.

  Project Tips

  Utilize Bootstrap Components: 
  Leverage Bootstrap's built-in components for rapid prototyping and responsive layout design. Familiarize yourself with Bootstrap classes and 
  utilities to create visually appealing landing pages effortlessly.

  Customize CSS Styles: 
  While Bootstrap provides a solid foundation, don't hesitate to customize CSS styles to match the project's aesthetic and branding requirements. 
  Experiment with custom colors, fonts, and spacing to create a unique look and feel for the homepage.

  Dynamic Content with JavaScript: 
  For the Pokémon search page, utilize JavaScript to fetch data from the PokeAPI dynamically. Implement event listeners to capture user input and 
  update the webpage content in real-time, providing a smooth and interactive search experience.

  Enhance Pokémon Details Page: 
  Apply CSS styling to enhance the presentation of Pokémon details on the details page. Use CSS to format text, images, and layout elements for 
  improved readability and visual appeal.

  GitHub Repository and Version Control: 
  Establish a GitHub repository for your project and commit code regularly. Utilize version control to keep track of changes and collaborate 
  effectively with team members if applicable.

  NOTE: Ensure that all code in your file is ready to run. This means that if someone opens your HTML file that is linked to your JavaScript file, 
  all code executes as intended. For example, if there are if statements, console.logs, or for loops, they should function correctly and display 
  output in the console as expected. If you have a function, make sure the function is called and runs. If there are classes/objects, make sure 
  they are instantiated and the methods are called.

  The goal of this note is to ensure that all code in your Python file runs smoothly and that is has been tested.